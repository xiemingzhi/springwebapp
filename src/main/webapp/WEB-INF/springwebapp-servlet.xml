<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	   ">
	
	<!-- Proper separation of concerns : web to service layer -->
	<context:component-scan base-package="com.mycompany" />	
	<context:annotation-config/>
	<!-- for JSON uses Jackson for JSR303 uses Hibernate validator -->
	<mvc:annotation-driven>
		<mvc:async-support default-timeout="30000" task-executor="taskExecutor"/>
	</mvc:annotation-driven>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    <property name="corePoolSize" value="5"/>
    <property name="maxPoolSize" value="50"/>
    <property name="queueCapacity" value="10"/>
    <property name="keepAliveSeconds" value="120"/>
  </bean>
  
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"><value>org.springframework.web.servlet.view.JstlView</value></property>
        <property name="prefix"><value>/jsp/</value></property>
        <property name="suffix"><value>.jsp</value></property>
    </bean>
    
    <!-- DataSource Definition -->
	<!-- <bean id="dataSource"
      	class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>org.hsqldb.jdbcDriver</value>
		</property>
		<property name="url">
			<value>jdbc:hsqldb:mem:contactdb</value>
		</property>
		<property name="username">
			<value>sa</value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean> -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/contactdbs?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8"/>
	    <property name="username" value="mycontact"/>
	    <property name="password" value="mycontact"/>
	</bean>
	
	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="mappingResources">
			<list>
				<value>Contact.hbm.xml</value>	
			</list>
		</property>		
		<!-- <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property> -->
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<!-- <prop key="hibernate.cache.use_second_level_cache">true</prop> -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<!-- <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
				<!-- <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache.xml</prop> -->
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
				<!-- <prop key="hibernate.hbm2ddl.auto">validate</prop> -->
				<prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</prop>
				<prop key="hibernate.sessionVariables">sql_mode='ALLOW_INVALID_DATES'</prop> 
				<!-- <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> -->
			</props>
		</property>	
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
	
	<!-- Spring Data Access Exception Translator Defintion -->
	<bean id="jdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"> 
		<property name="dataSource"><ref bean="dataSource"/></property> 
	</bean> 

	<!-- Hibernate Template Defintion -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory"><ref bean="sessionFactory"/></property> 
		<property name="jdbcExceptionTranslator"><ref bean="jdbcExceptionTranslator"/></property> 
	</bean> 

	<!-- Contact DAO Definition: Hibernate implementation -->
	<bean id="contactDao" class="com.mycompany.dao.ContactDAOHibernate">
		<property name="hibernateTemplate"><ref bean="hibernateTemplate"/></property> 
	</bean>
    
    <bean id="contactApp" class="com.mycompany.ContactAppImpl">
		<property name="contactDao">
			<ref bean="contactDao"/>
		</property>
	</bean>
    
    <!-- cannot use this when annotations driven -->
    <!-- listcontacts redirects to listcontacts.jsp -->
    <!-- 
    <bean name="/addcontact.htm" class="com.mycompany.web.AddContactFormController">
        <property name="sessionForm" value="true"/>
        <property name="commandName" value="contact"/>
        <property name="commandClass" value="com.mycompany.Contact"/>
        
        <property name="validator">
            <bean class="com.mycompany.service.AddContactValidator"/>
        </property>
        <property name="formView" value="addcontact"/>
        <property name="successView" value="listcontacts"/> 
        <property name="contactApp" ref="contactApp"/>
    </bean>
 	-->

 	<!-- <import resource="security-context.xml"/> -->
 		
</beans>        