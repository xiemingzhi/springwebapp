<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	   http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	   ">
	
	<!-- for JSON uses Jackson for JSR303 uses Hibernate validator -->
	<mvc:annotation-driven />
    	
	<!-- Proper separation of concerns : web to service layer -->
	<context:component-scan base-package="co.ivgrp" />	
	<context:annotation-config/>
	
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>
    
    <!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"><value>org.springframework.web.servlet.view.JstlView</value></property>
        <property name="prefix"><value>/jsp/</value></property>
        <property name="suffix"><value>.jsp</value></property>
    </bean> -->
    
    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.servlet.PageNotFound">pageNotFound</prop>
				<prop key="org.springframework.dao.DataAccessException">error</prop>
				<prop key="org.springframework.transaction.TransactionException">error</prop>
			</props>
		</property>
	</bean> -->
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
    <!--
		 Configures view for returning JSON to the client
	-->
	<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="contentType" value="text/plain"/>
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>
	
	<bean id="jacksonObjectMapper" class="co.ivgrp.client.JSONObjectMapper" />
	
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="jsonMessageConverter"/>
			</util:list>
		</property>
	</bean>

	<!--
		 Converts JSON to POJO and vice versa
	-->
	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  		<property name="locations" value="classpath:thirdparty.properties"/>
	</bean>

	<bean id="dataSource"
      	class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/connectmedbs</value>
			<!-- <value>jdbc:mysql://192.168.1.125:3306/connectmedbs</value> -->
			<!-- <value>jdbc:mysql://u940:3306/connectmedbs</value> -->
		</property>
		<property name="username">
			<value>connectme</value>
		</property>
		<property name="password">
			<value>connectme</value>
		</property>
	</bean>

	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- <property name="packagesToScan" value="com.mycompany" /> -->
		<property name="annotatedClasses">
			<list>
				<value>co.ivgrp.Account</value>
				<value>co.ivgrp.UserInfo</value>	
				<value>co.ivgrp.AccountDevice</value>
				<value>co.ivgrp.Message</value>
				<value>co.ivgrp.FriendList</value>
			</list>
		</property>
		<!-- <property name="mappingResources">
			<list>
				<value>com/mycompany/Account.hbm.xml</value>	
			</list>
		</property> -->		
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
				<!-- doesn't work -->
				<!-- <prop key="hibernate.hbm2ddl.auto">drop_create</prop> -->
				<prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</prop>
				<prop key="hibernate.sessionVariables">sql_mode='ALLOW_INVALID_DATES'</prop> 
			</props>
		</property>	
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
	
	<bean id="transactionManager"
            class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"/>
  	</bean>
  	<tx:annotation-driven transaction-manager="transactionManager"/>
  
	<!-- Spring Data Access Exception Translator Defintion -->
	<bean id="jdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"> 
		<property name="dataSource"><ref bean="dataSource"/></property> 
	</bean> 
	
	<!-- Hibernate Template Defintion -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory"><ref bean="sessionFactory"/></property> 
		<property name="jdbcExceptionTranslator"><ref bean="jdbcExceptionTranslator"/></property> 
	</bean> 
	
	<!-- Contact DAO Definition: Hibernate implementation -->
	<bean id="accountDao" class="co.ivgrp.dao.AccountDAOHibernate">
		<property name="hibernateTemplate"><ref bean="hibernateTemplate"/></property> 
	</bean>	
	<bean id="messageDao" class="co.ivgrp.dao.MessageDAOHibernate">
		<property name="hibernateTemplate"><ref bean="hibernateTemplate"/></property> 
	</bean>
    <bean id="userInfoDao" class="co.ivgrp.dao.UserInfoDAOHibernate">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property> 
	</bean>
	
 	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	  <property name="corePoolSize" value="5" />
	  <property name="maxPoolSize" value="10" />
	  <property name="queueCapacity" value="90" />
	</bean>

	<!-- <bean name="friendsJob" class="org.springframework.scheduling.quartz.JobDetailBean">
	  <property name="jobClass" value="com.mycompany.FindFriendsJob" />
	  <property name="jobDataAsMap">
	    <map>
	      <entry key="timeout" value="5" />
	    </map>
	  </property>
	</bean>
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="exampleJob" />
	    run every morning at 6 AM
	    <property name="cronExpression" value="1 * * * * ?" />
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="cronTrigger" />
	            <ref bean="simpleTrigger" />
	        </list>
	    </property>
	</bean> -->
</beans>        