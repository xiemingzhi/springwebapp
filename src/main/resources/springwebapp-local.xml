<?xml version="1.0" encoding="UTF-8"?>
<!-- remoting example from jax-ws ri commons spring support 
xsd must point to correct url 
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:ws= "http://jax-ws.dev.java.net/spring/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd       
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
http://jax-ws.dev.java.net/spring/core http://jax-ws.java.net/spring/core.xsd
       ">
    <context:component-scan base-package="com.mycompany" />	   
	<context:annotation-config/>
	
	<import resource="testData.xml"/>

	<!-- DataSource Definition -->
	<bean id="dataSource"
      	class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>org.hsqldb.jdbcDriver</value>
		</property>
		<property name="url">
			<value>jdbc:hsqldb:mem:contactdb</value>
		</property>
		<property name="username">
			<value>sa</value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean>

	<!-- Hibernate SessionFactory Definition -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="mappingResources">
			<list>
				<value>com/mycompany/Contact.hbm.xml</value>	
			</list>
		</property>		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>	
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
	
	<!-- Spring Data Access Exception Translator Defintion -->
	<bean id="jdbcExceptionTranslator" class="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"> 
		<property name="dataSource"><ref bean="dataSource"/></property> 
	</bean> 

	<!-- Hibernate Template Defintion -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory"><ref bean="sessionFactory"/></property> 
		<property name="jdbcExceptionTranslator"><ref bean="jdbcExceptionTranslator"/></property> 
	</bean> 

	<!-- Contact DAO Definition: Hibernate implementation -->
	<bean id="contactDao" class="com.mycompany.dao.ContactDAOHibernate">
		<property name="hibernateTemplate"><ref bean="hibernateTemplate"/></property> 
	</bean>	
	
	<bean id="contactApp" class="com.mycompany.ContactAppImpl">
		<property name="contactDao">
			<ref bean="contactDao"/>
		</property>
	</bean>
	
	<aop:config>
		<aop:advisor pointcut="execution(* *..ContactDAO.insertContact(*..Contact))" advice-ref="loggingAdvice"/>
	</aop:config>
    
    <bean id="loggingAdvice" class="com.mycompany.aop.ContactDAOLoggingAdvice">
	</bean>

	<bean id="simplecontactApp" class="com.mycompany.SimpleContactAppImpl">
		<property name="contactDao">
			<ref bean="contactDao" />
		</property>
	</bean>
	
	<!-- using the jdk -->
	<!-- <bean class="org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter">
	    <property name="baseAddress" value="http://localhost:8081/"/>
	</bean> -->
	
	<bean id="wsLoggingHandler" class="com.mycompany.common.LoggingHandler">
	</bean>
		
	<!-- <bean id="restfulcontactApp" class="com.mycompany.RestfulContactService">
		<property name="contactDao">
			<ref bean="contactDao" />
		</property>
	</bean> -->
	
</beans>
	